{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","aboutText","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","console","log","target","rows","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","split","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cd093982.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n/* import { Link } from \"react-router-dom\"; */\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link> */}\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to =\"/\">\r\n                Home\r\n              </Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href =\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link> */}\r\n              <a className=\"nav-link\" href=\"/about\">\r\n                {props.aboutText}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n              {props.mode==='light'?'Enable Dark Mode':'Disable Dark Mode'}\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set Title here\",\r\n  aboutText: \"About\",\r\n};\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        console.log(\"Uppercase was clicked \", text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        console.log(\"Handle on change\");\r\n        setText(event.target.value);\r\n        \r\n    }\r\n\r\n    const handleLoClick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lowercase\", \"success\");\r\n    }\r\n\r\n    const handleClearText = ()=>{\r\n        let newText = '';\r\n        setText(newText);\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#032234'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3 my-3\">\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"6\" \r\n                 style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'#032234'}}/>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to uppercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to lowercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleClearText}>Clear text</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#032234'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").length} to read the words</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:'Enter something in the textbox'}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\n/* import About from './components/About'; */\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, {useState} from 'react';\nimport Alert from './components/Alert';\n/* import {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\"; */\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n\n  }\n\n  \n  \n\n  const toggleMode = ()=>{\n    if(mode==='dark'){\n      setMode('light');\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light Mode is enabled\", \"success\");\n    }\n\n    else {\n      setMode('dark');\n      document.body.style.backgroundColor = '#032234'\n      showAlert(\"Dark Mode is enabled\", \"success\");\n    }\n  }\n\n\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title = \"TextUtils\" mode = {mode} toggleMode = {toggleMode}/> \n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n      {/* <Switch>\n          <Route exact path=\"/about\">\n            <About></About>\n          </Route>\n          <Route exact path=\"/\"> */}\n            <TextForm heading = \"Enter text to analyse\" mode = {mode} showAlert={showAlert}></TextForm>\n         {/*  </Route>\n        </Switch> */}\n        \n        \n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}